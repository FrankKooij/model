'' PlantUML Class Diagram

@startuml

skinparam defaultFontColor black
skinparam defaultFontName Lucida Sans
skinparam defaultFontSize 11
skinparam defaultFontStyle normal
skinparam shadowing false
skinparam wrapWidth 250
skinparam class {
    ArrowColor #70a426
    ArrowFontSize 10
    ArrowThickness 1.5
    AttributeIconSize 0
    BackgroundColor #ffffff
    BorderColor #007bc7
    BorderThickness 2.5
    FontColor #007bc7
    FontSize 12
    FontStyle bold
}

hide circle
hide empty members
'' hide attributes
'' hide methods
hide namespace
'' hide stereotype

'' hide Site
hide Snippet
hide <<Gestructureerd datatype>>
hide <<Referentielijst>>

'' =================================================================================================

title Conceptual information model for publishing linked data-specification details on the web using Jekyll as a static site generator

Site "1" *-- "1..*" Collection
Site "1" *-- "1..*" Overview
Site "1" *-- "*"    Sequence
Site "1" *-- "1..*" Layout

Collection "*" --> "+ origin\n0..1" Collection
Collection "1" *-- "*" Article
Collection "1" *-- "*" Sequence

Article "*" --> "+ subArticleCollection\n0..1" Collection
Article "*" -> "+ layout\n1" Layout
'' Jekyll expects a layout variable in the front matter of each page

Tag "*"   -> "+ parent\n1" Collection
Tag --|> Article
Tag "*" <--> "*" Article

Overview "0..1" -> "+ harvest\n1" Collection
Overview "*" --> "+ layout\n1" Layout

Sequence "*" --> "+ harvest\n*" Collection
Sequence "*" --> "+ member\n*" Article
Sequence "*" --> "+ layout\n1" Layout

Layout "*" --> "+ harvest\n0..1" Collection
Layout "1" --> "+ filter\n0..1" Collection
Layout "*" --> "+ layout\n0..1" Layout

Collection  "1" *.. "*" Snippet
Article    "*" ..> "*" Snippet
Overview "*" ..> "*" Snippet
Layout      "*" ..> "*" Snippet
Snippet     "*" ..> "*" Snippet

abstract class Site <<Objecttype>> {
    + baseURL: CharacterString [1..1] {classifier}
    + license: CharacterString [1..1]
''    --methods--
''    --definition--
''    --constraints--
''    --encoding--
}

class Collection <<Objecttype>> {
    + label: CharacterString [1..1] {classifier}
    + alias: CharacterString [0..1]
    + includeInSearch: Boolean [1..1]
    + showDates: Boolean [1..1]
    + output: Boolean [1..1]
    + useAsTags: Boolean [1..1]
''    --methods--
    --definition--
    Set of articles that describe similar concepts
''    --constraints--
''    --encoding--
}

class Article <<Objecttype>> {
    + title: CharacterString [1..1] {classifier}
''    + collection {classifier}
    + content: CharacterString [1..1]
    + date: Date [0..1]
    + description: CharacterString [0..1]
    + editor: CharacterString [0..1]
    + hasDiagrams: Boolean [0..1]
    + sortCode: CharacterString [0..1]
    + toc: TableOfContents [0..1]
''    --methods--
    --definition--
    A self-contained unit of discourse with its metadata
    --constraints--
    + title must be unique within the collection
    + sortCode for the collection index must be either unique or empty for all articles in the collection
    + an article should not tag itself
    + subArticleCollection is required if an article is the parent of subarticles
    + all subarticles to an article must be in the same collection
    --encoding--
    Kramdown with YAML front matter (and sometimes Mermaid diagrams or Liquid or both)
}

abstract class Tag <<Objecttype>> {
''    --methods--
    --definition--
    Article in a taggable collection
''    --constraints--
''    --encoding--
}

class Overview <<Objecttype>> {
    + fileName [1..1] {classifier}
    + collectionSortOrder: SortOrder [1..1]
    + hasDiagrams: Boolean [0..1]
    + siteMenu: Boolean [0..1]
    + sortCode: CharacterString [1..1]
    + showNoDateItems: Boolean [1..1]
    + title: CharacterString [1..1]
    --methods--
    contentWrapper()
    --definition--
    Template for the overview page of a root collection
    --constraints--
    + sortCode for the site menu must be unique
    --encoding--
    HTML with Liquid and YAML front matter
}

class Sequence <<Objecttype>> {
    + title: CharacterString [1..1] {classifier}
''    + sortCode: CharacterString [1..1]
    + sequenceMembers: SequenceTable[1..1]
''    --methods--
    --definition--
    Ordered set of related articles
''    --constraints--
''    --encoding--
}

class Layout <<Objecttype>> {
    + fileName [1..1] {classifier}
    + showSubArticles: Boolean [0..1]
    --methods--
    contentWrapper()
    --definition--
    Template for the body of a page
    --constraints--
    + non-default layouts must link to a layout
    + the base default layout must not link to any layout
    + a layout must not link to itself
    + a filter relation requires also a harvest relation
    --encoding--
    HTML with Liquid and YAML front matter
}

class Snippet <<Objecttype>> {
    + title: CharacterString [1..1] {classifier}
    + content: CharacterString [1..1]
''    --methods--
    --definition--
    Text snippet with its metadata
''    --constraints--
    --encoding--
    Kramdown with YAML front matter (and sometimes Mermaid diagrams or Liquid or both)
}

class TableOfContents <<Gestructureerd datatype>> {
    + heading: CharacterString [1..*]
''    --methods--
    --definition--
    Selected exact quotations of content headings for a navigable table of contents in the sidebar
''    --constraints--
    --encoding--
    YAML sequence
}

class SequenceTable <<Gestructureerd datatype>> {
    + title: CharacterString [1..*]
''    --methods--
    --definition--
    Selected exact quotations of related articles titles in their preferred reading order
''    --constraints--
    --encoding--
    YAML sequence
}

class SortOrder <<Referentielijst>> {
    + alphabetical
    + chronological
    + sortCode
''    --methods--
    --definition--
    Valid choices for the order in which a list of navigable links is presented
''    --constraints--
''    --encoding--
}

@enduml
