@startuml

!include https://raw.githubusercontent.com/FrankKooij/model/master/opmaak.iuml

hide circle

hide empty members

'' hide stereotype

hide <<enumeration>>

'' hide attributes

'' hide methods

hide namespace

'' -------------------------------------------------------------------------------------------------

'' hide <<Gestructureerd datatype>>
'' hide <<Referentielijst>>

skinparam wrapWidth 250

'' =================================================================================================

'' title Conceptueel informatiemodel van de praktijkhandleiding

Theme "1" --> "*" Subtheme
Collection "1" *-- "*" Document
'' TagCollection "1" *-- "*" Tag
'' Tag "*\n+ collection\n+ title" <-- "*" Document
Tag "*" <-- "*" Document
'' Tag "0..1" *-- "1" Document
Tag --|> Document
'' Theme <|-- Trefwoorden
Collection <|-- Theme
Collection <|-- Subtheme
'' Site "1" *-- "*" Collection
'' Site "1" .. "*" Document

'' abstract class Site <<Objecttype>> {
''     + config: Config [1..1]
'' }

'' class Config <<Gestructureerd datatype>> {
''     --
''     _config.yml
'' }

class Collection <<Objecttype>> {
    + alias: CharacterString [0..1]
    + dates: Boolean [1..1]
    + label: CharacterString [1..1] {classifier}
    + output: Boolean [1..1]
    + tagLists: Boolean [1..1]
    + zoeken: Boolean [1..1]
    --constraints--
    + label uniquely identifies each collection
''     Collection::allInstances()->isUnique(label)
''     context Collection inv: Collection.allInstances()->forAll(c1, c2 | c1 <> c2 implies c1.label <> c2.label)
''    --nederlands--
''    + alias
''    + datums
''    + label (=naam van collection)
''    + output
''    + taglists
''    + zoeken
    --definition--
Set of documents that describe similar concepts
}

Collection "*" --> "+ origin\n0..1" Collection

class Layout <<Objecttype>> {
    + script [0..1]
    --definition--
    Content structure that enhances the body of a page
}

class Default <<Objecttype>> {
''     --definition--
    Core content structure of the body of a page
}

class Theme <<Objecttype>> {
}

Document "*" --> "1" Layout

Layout "*" --> "0..1" Layout

Collection "0..1" -- "0..1" Layout

Layout "1" -- "0..1" Theme

Default "*" --> "0" Layout

Default --|> Layout

Template --|> Layout

Template "*" --> "+ layout\n1" Layout

Template "0..1" -- "1" Collection

Document "*" --> "1" Theme

'' Document::toc "1" -> "1" Document::content

class Template <<Objecttype>> {
    + collectionSortOrder: SortOrder [1..1]
    + menuSortCode: CharacterString [1..1]
    + showNoDateItems: Boolean [1..1]
    + title: CharacterString [1..1] {classifier}
    --constraints--
    + title uniquely identifies each template
    + menuSortCode must be unique
''     Template::allInstances()->isUnique(menuSortCode)
''     context Template inv: Template.allInstances()->forAll(t1, t2 | t1 <> t2 implies t1.title <> t2.title)
''    --nederlands--
''    + sorteercode
''    + sorteren
''    + title
''    + weergevenalsdatumontbreekt
    --definition--
    Content structure of a collection overview page
}

class Document <<Objecttype>> {
    + content: CharacterString [1..1]
    + date: Date [0..1]
    + description: CharacterString [0..1]
    + editor: CharacterString [0..1]
    + mermaid: Boolean [0..1]
    + sortCode: CharacterString [0..1]
    + title: CharacterString [1..1] {classifier}
    + toc: TableOfContents [0..1]
    --constraints--
    + title uniquely identifies each document
    + sortCode must be either empty for all documents in the collection or unique
''     context Document inv: Document.allInstances()->forAll(d1, d2 | d1 <> d2 implies d1.title <> d2.title)
''     Document::allInstances()->isUnique(sortCode) or Document::allInstances()->isEmpty(sortCode)
    --nederlands--
    ???
    --definition--
    The text for the body of a web page (encoded as Kramdown) with its meta data (encoded as YAML front matter)
''    De romptekst van de webpagina (in Kramdown) met YAML front matter
}

class Snippet <<Objecttype>> {
    + content: CharacterString [1..1]
    + title: CharacterString [1..1] {classifier}
    --constraints--
    + title uniquely identifies each snippet
''     Snippet::allInstances()->isUnique(title)
''     context Snippet inv: Snippet.allInstances()->forAll(s1, s2 | s1 <> s2 implies s1.title <> s2.title)
''    --nederlands--
''    + title
    --definition--
    Text snippet (encoded as Kramdown) with its meta data (encoded as YAML front matter)
'' Tekstfragmenten
}

Document "*" -> "+ title\n*" Snippet
Snippet "*" -> "+ title\n*" Snippet
Collection "1" *-- "*" Snippet

class Subtheme <<Objecttype>> {
}

class TableOfContents <<Gestructureerd datatype>> {
    + heading: CharacterString [1..*]
    --definition--
    Selection of content headings for a navigable table of contents (exact quotations encoded as a YAML sequence)
}

'' abstract class TagCollection <<Objecttype>> {
'' }

'' TagCollection --|> Collection

abstract class Tag <<Objecttype>> {
''     + name [1..1]
}

'' class NamedCollection <<Objecttype>> {
''     Instance of a collection
'' }

'' NamedCollection --|> Collection

'' NamedCollection "1" *-- "*" Tag

Collection "0..1" *-- "*" Tag

class SortOrder <<Referentielijst>> {
    + alphabetical
    + chronological
    + sortCode
''    --nederlands--
''    + alfabetisch
''    + chronologisch
''    + sorteercode
    --definition--
    Valid choices for the order in which a list of navigable page links is presented
}

@enduml
